// <auto-generated />
using System;
using LearningApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearningApi.Migrations
{
    [DbContext(typeof(LearningDataContext))]
    partial class LearningDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LearningApi.Data.LearningItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Competency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LearningItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Competency = "Conscious Incompetence",
                            Topic = "Learn Protobuf"
                        },
                        new
                        {
                            Id = 2,
                            Competency = "Conscious Competence",
                            Notes = "Watched some good videos. Tried it out. It's cool",
                            Topic = "Explore Terraform"
                        });
                });

            modelBuilder.Entity("LearningApi.Data.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("WhenAdded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fix Angular App",
                            IsRemoved = false,
                            WhenAdded = new DateTime(2021, 8, 6, 14, 12, 40, 322, DateTimeKind.Local).AddTicks(4329)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Add a POST to the API",
                            IsRemoved = false,
                            WhenAdded = new DateTime(2021, 8, 6, 14, 12, 40, 325, DateTimeKind.Local).AddTicks(3014)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
